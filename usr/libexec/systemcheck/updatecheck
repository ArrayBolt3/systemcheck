#!/bin/bash

## Copyright (C) 2025 - 2025 ENCRYPTED SUPPORT LLC <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

true "$0: START"

set -o errexit
set -o nounset
set -o errtrace
set -o pipefail

close_notification() {
  ## notification_id might be unset if signal sigterm is received very quickly.
  [[ -v notification_id ]] || notification_id=""
  if [ "$notification_id" = "" ]; then
    return 0
  fi

  qdbus org.freedesktop.Notifications \
    /org/freedesktop/Notifications \
    org.freedesktop.Notifications.CloseNotification \
    "$notification_id"
}

send_notification_wait_exit() {
  ## 6 hours
  sleep_milliseconds=$(( $sleep_seconds * 1000 ))
  notification_id="$(notify-send --print-id --wait --expire-time="$sleep_milliseconds" --app-name='updatecheck' -- "$@")" || true

  sleep infinity &
  wait "$!"
  true "$0: end of script: END"
  exit 0
}

sigterm_trap() {
  close_notification
  true "$0: sigterm_trap: END"
  exit 0
}

[[ -v sleep_seconds ]] || sleep_seconds="21600"

trap "sigterm_trap" SIGTERM SIGINT

## TODO: /usr/libexec/security-misc/apt-get-update duplicate pidfile write_pid_file
if ! leaprun apt-get-update ; then
  send_notification_wait_exit "Software updates check failure" "Command 'leaprun apt-get-update' failed."
fi

## 'wc' can core dump. Example:
## zsh: illegal hardware instruction (core dumped) wc -l
## https://github.com/rspamd/rspamd/issues/5137
if ! printf "%s" | wc -l ; then
  send_notification_wait_exit "Software updates check failure" "Command 'printf \"%s\" | wc -l' failed."
fi

## Cannot use 'apt-get list --upgradable' because it leads to error:
## > E: Command line option --upgradable is not understood in combination with the other options
update_package_count="$(LC_ALL=C apt list --upgradable | wc -l)" || true

## Remove first counted line by 'apt':
## > Listing... Done
(( update_package_count-- )) || true

if [ "$update_package_count" = "0" ]; then
   true "$0: INFO: No updates available."
   exit 0
fi

update_notify_title='Software updates available'
update_notify_body="${update_package_count}"
if (( update_package_count > 1 )); then
   update_notify_body+=' packages have'
else
   update_notify_body+=' package has'
fi
update_notify_body+=' updates available. You can install them at your convenience using the System Maintenance Panel.'

send_notification_wait_exit "${update_notify_title}" "${update_notify_body}"
