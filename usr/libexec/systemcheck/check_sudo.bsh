#!/bin/bash

## Copyright (C) 2012 - 2025 ENCRYPTED SUPPORT LLC <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

## Not actually used. But useful as a test.
# shellcheck source=../libexec/helper-scripts/use_leaprun.sh
source /usr/libexec/helper-scripts/use_leaprun.sh

# shellcheck source=../libexec/helper-scripts/use_sudo.sh
source /usr/libexec/helper-scripts/use_sudo.sh

check_privilege_escalation_tools() {
   ## leaprun is mandatory for systemcheck.
   ## systemcheck has been fully ported to systemcheck.
   ## privleap is a dependency of systemcheck.
   ## Therefore test leaprun in any case.
   check_privilege_escalation_tool_do leaprun check-privleap
   check_privilege_escalation_tool_do leaprun check-sudo

   if [ ! "$use_sudo" = "yes" ]; then
      return 0
   fi

   check_privilege_escalation_tool_do sudo --non-interactive -- /usr/bin/test -x /usr/bin/test
}

check_privilege_escalation_tool_do() {
   local privilege_escalation_tool_first_argument privilege_escalation_tool_command exit_code privilege_escalation_tool_output

   privilege_escalation_tool_first_argument="$1"
   if [ "$privilege_escalation_tool_first_argument" = "leaprun" ]; then
      privilege_escalation_tool_first_argument="$1 $2"
   fi
   privilege_escalation_tool_command="$@"

   exit_code=0
   privilege_escalation_tool_output="$(setsid -- $privilege_escalation_tool_command 2>&1)" || { exit_code="$?" ; true; };

   if [ "$exit_code" = "0" ] ; then
      privilege_escalation_tool_ok=true
   else
      privilege_escalation_tool_ok=false
   fi

   if [ ! "$privilege_escalation_tool_output" = "" ]; then
      privilege_escalation_tool_ok=false
   fi

   if [ "$privilege_escalation_tool_ok" = "true" ]; then
      local MSG="<p>Check '<code>$privilege_escalation_tool_first_argument</code>' Result: OK</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
   else
      local MSG="<p>Check '<code>$privilege_escalation_tool_first_argument</code>' Result: System misconfiguration. No panic. No severe issue. Because of this other tests might be malfunctioning too. Command
<blockquote>
setsid -- $privilege_escalation_tool_command ; echo \$?
</blockquote>
did not output nothing with exit code zero. Something else happened.

<br></br><code>exit_code</code> output: <code>$exit_code</code>

<br></br><code>privilege_escalation_tool_output</code> output:

<blockquote><code>$privilege_escalation_tool_output</code></blockquote>
</p>"
      $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
   fi

   ## sudo hostname wrong-hostname
   ## sudo test
   ## sudo: unable to resolve host wrong-hostname: Temporary failure in name resolution
}
