#!/bin/bash

## Copyright (C) 2012 - 2022 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

#set -x

check_tor_pid_do() {
   ## Fallback.
   tor_pid_exit_code="1"

   ## Only check on Whonix-Gateway.
   if [ ! -e "/usr/share/anon-gw-base-files/gateway" ]; then
      tor_pid_message="Not running on Whonix-Gateway, ok."
      tor_pid_exit_code="0"
      return 0
   fi

   ## Skip in Qubes-Whonix-Gateway TemplateVM, because Tor is not running there.
   if test -f /run/qubes/this-is-templatevm ; then
      tor_pid_message="Not running in Qubes-Whonix-Gateway TemplateVM, ok."
      tor_pid_exit_code="0"
      return 0
   fi

   tor_pid_exit_code="0"
   tor_pid_output="$(sudo --non-interactive /usr/libexec/systemcheck/check_tor_pid)" || { tor_pid_exit_code="$?" ; true; };
   tor_pid_message="$(/usr/libexec/msgcollector/br_add "$tor_pid_output")"
   return 0
}

check_tor_pid() {
   ## returns: tor_pid_exit_code, tor_pid_message
   check_tor_pid_do

   if [ ! "$tor_pid_exit_code" = "0" ]; then
      local MSG="<p>\
Tor Pid Check Result: <b>Tor not running.</b>
<br>
<br>You have to fix this error, before you can use Tor.
<br>
<br>Please restart Tor after fixing this error.

<blockquote>    $start_menu_instructions_system_first_part Restart Tor</blockquote>
    or in Terminal: <blockquote><code>sudo service tor@default restart</code></blockquote>

Restart <code>systemcheck</code> after fixing this error.

<blockquote>   $start_menu_instructions_system_first_part System Check</blockquote>
   or in Terminal: <code><blockquote>systemcheck</blockquote></code>

Debugging information:
<br>$tor_pid_message</p>"
      $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
      EXIT_CODE="1"
      cleanup "1"
      return 0
   else
      local MSG="<p>Tor Pid Check Result: $tor_pid_message</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
   fi
}
