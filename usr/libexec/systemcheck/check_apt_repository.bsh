#!/bin/bash

## Copyright (C) 2012 - 2025 ENCRYPTED SUPPORT LLC <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

check_apt_repository() {
   if [ "$silent" -ge "4" ]; then
      true "silent is $silent. Skipping $FUNCNAME."
      return 0
   fi

   local if_you_know_what_you_are_doing_msg
   if_you_know_what_you_are_doing_msg="$(if_you_know_what_you_are_doing_funct "$FUNCNAME")"

   local temp_x_tool="<blockquote>$persistent_changes_start_menu_instructions_first_part Derivative Repository</blockquote>"
   local temp_cli_tool="<code><blockquote>sudo repository-dist</blockquote></code>"

   local temp_base_msg_enabled="<p>$PROJECT_NAME APT Repository: <u>Enabled</u>.
When the $PROJECT_NAME team releases <code>$derivative_codename_uppercase</code> updates,
they will be AUTOMATICALLY installed (when you run apt-get dist-upgrade)
along with updated packages from the Debian team. Please
read <a href=${PROJECT_HOMEPAGE}/wiki/Trust>${PROJECT_HOMEPAGE}/wiki/Trust</a> to understand the risk.
If you want to change this, use:</p>"

   local temp_base_msg_disabled="<p>$PROJECT_NAME APT Repository: <u>Disabled</u>.
When the $PROJECT_NAME team releases an update, it will be NOT be installed.
Please read <a href=${PROJECT_HOMEPAGE}/wiki/Trust>${PROJECT_HOMEPAGE}/wiki/Trust</a> to understand the risk.
You are free to manually update from source code.
If you want to change this, use:</p>"

   if [ -f "/etc/apt/sources.list.d/derivative.list" ]; then
      if [ "$silent" -ge "3" ]; then
         true "silent is $silent. Not reporting that repository is enabled."
         return 0
      fi

      local MSG="$temp_base_msg_enabled
    $temp_x_tool"
      $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"

      local MSG="$temp_base_msg_enabled
    $temp_cli_tool"
      $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"

      return 0
   fi

   EXIT_CODE="1"

   local MSG="$temp_base_msg_disabled
    $temp_x_tool
<p>$if_you_know_what_you_are_doing_msg</p>"
      $output_x ${output_opts[@]} --messagex --typex "warning" --message "$MSG"

   local MSG="$temp_base_msg_disabled
    $temp_cli_tool
<p>$if_you_know_what_you_are_doing_msg</p>"
$output_cli ${output_opts[@]} --messagecli --typecli "warning" --message "$MSG"
}
