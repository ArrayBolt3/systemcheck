#!/bin/bash

## Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

download_whonix_news() {
   if [ "$qubes_vm_type" = "TemplateVM" ]; then
      return 0
   fi

   whonixcheck_run_function whonix_news_preparation
   whonixcheck_run_function whonix_gateway_census_count_or_not

   whonixcheck_run_function download_now_whonix_news

   whonixcheck_run_function whonix_gateway_census_result

   whonixcheck_run_function check_whonix_show_news
}

whonix_news_preparation() {
   if [ "$TEMP_DIR" = "" ]; then
      error "Variable TEMP_DIR is empty!"
      return 0
   fi

   whonix_news_hyperlink="<a href=https://www.whonix.org/wiki/Whonix_News>Whonix News</a>"
   whonix_news_build_version_link="<a href=https://www.whonix.org/wiki/Whonixcheck#Whonix_Build_Version>Whonix Build Version</a>"

   whonix_news_download_dir="$TEMP_DIR/news/download_dir"
   whonix_news_verify_dir="$TEMP_DIR/news/verify_dir"
   whonix_news_extract_dir="$TEMP_DIR/news/extract_dir"

   whonix_gateway_census_api_link="http://api.dds6qkxpwdeubwucdiaord2xgbbeyds25rbsgr73tbfpqpt4a6vjwsyd.onion/whonix_census"
   whonix_gateway_last_census_file="/var/lib/whonixcheck/whonix_gateway_last_census.txt"
   whonix_gateway_census_result_file="/var/lib/whonixcheck/whonix_gateway_census_result.txt"

   [ -n "$SOCKS_PORT_WHONIX_NEWS" ] || SOCKS_PORT_WHONIX_NEWS="9114"
   [ -n "$CURL_PROXY_WHONIX_NEWS" ] || CURL_PROXY_WHONIX_NEWS="--proxy socks5h://user:password@$GATEWAY_IP:$SOCKS_PORT_WHONIX_NEWS"

   #local MSG="Whonix News Download: Checking for Whonix news and updates..."
   #$output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"

   mkdir --parents "$whonix_news_download_dir"
   mkdir --parents "$whonix_news_verify_dir"
   mkdir --parents "$whonix_news_extract_dir"

   rm -f "$whonix_gateway_census_result_file"
}

whonix_gateway_census_count_or_not() {
   ## TODO: Not in Qubes DispVM.

   local max_age current_time last_run difference

   if [ ! "$vm_lower_case_short" = "gateway" ]; then
      whonix_gateway_census_do_check_in="false"
      return 0
   fi

   ## One hour has 3600 seconds.
   ## A day has 86400 seconds.
   max_age="86400"

   if [ -f "$whonix_gateway_last_census_file" ]; then
      last_run="$(cat "$whonix_gateway_last_census_file")" || true
   fi

   [ -n "$last_run" ] || last_run="$max_age"

   current_time="$(date +%s)"
   difference="$(( $current_time - $last_run ))" || whonix_gateway_census_do_check_in="true"

   if [ "$difference" -ge "$max_age" ]; then
      whonix_gateway_census_do_check_in="true"
   else
      whonix_gateway_census_do_check_in="false"
   fi
}

download_now_whonix_news() {
   if [ "$whonix_gateway_census_do_check_in" = "true" ]; then
      local MSG="Whonix Census: anonymously counting this Whonix-Gateway, ok."
      if [ "$verbose" -ge "1" ]; then
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
      download_now_whonix_news_helper "$whonix_gateway_census_api_link" "$whonix_gateway_census_result_file" "--request PUT --data gateway-sign-in"
   else
      local MSG="Whonix Census: Not needed, ok."
      if [ "$verbose" -ge "1" ]; then
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
      download_now_whonix_news_helper "None required at this time, ok." "none"
   fi

   if [ "$whonix_news_download_success" = "false" ]; then
      local MSG="<p>$whonix_news_hyperlink Result: Download of Whonix News File failed.</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
      fi
      $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
   fi
}

download_now_whonix_news_helper() {
   local web_link file_name

   web_link="$1"
   file_name="$2"
   #extra_curl_args: ${@:3}

   if echo "$web_link" | grep -q "https://" ; then
      local CURL_SSL
      CURL_SSL="--tlsv1.2"
   fi

   ## Fallback.
   whonix_news_download_success="false"

   declare -A -g whonix_news_download_exit_code
   whonix_news_download_exit_code["$web_link"]="0"

   if [ "$file_name" = "none" ]; then
      true
   else
      $CURL \
         $CURL_VERBOSE \
         $CURL_SSL \
         --fail \
         $CURL_PROXY_WHONIX_NEWS \
         --location \
         --max-time 180 \
         --output "$file_name" \
         ${@:3} \
         "$web_link" \
         &

      lastpid="$!"
      wait "$lastpid" || { whonix_news_download_exit_code["$web_link"]="$?" ; true; };
   fi

   if [ ! "${whonix_news_download_exit_code[$web_link]}" = "0" ]; then
      whonix_news_download_success="false"
      local curl_status_message
      curl_status_message="$(/usr/lib/curl-scripts/curl_exit_codes "${whonix_news_download_exit_code[$web_link]}")"
      local MSG="<p>$whonix_news_hyperlink Result: Download of Whonix News File failed. \
(file_name: <code>$file_name</code> | web_link: <code>$web_link</code> | curl exit code: <code>$curl_status_message</code>)</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "error" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "error" --message "$MSG"
      fi
      return 0
   fi

   whonix_news_download_success="true"
   if [ "$verbose" -ge "1" ]; then
      local curl_status_message
      curl_status_message="$(/usr/lib/curl-scripts/curl_exit_codes "${whonix_news_download_exit_code[$web_link]}")"
      local MSG="<p>$whonix_news_hyperlink Result: Download of Whonix News File succeeded. \
(file_name: <code>$file_name</code> | web_link: <code>$web_link</code> | curl exit code: <code>$curl_status_message</code>)</p>"
      $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
   fi
}

whonix_gateway_census_result() {
   local web_link whonix_gateway_census_result_content message

   whonix_census_result_ok="false"

   if [ ! "$vm_lower_case_short" = "gateway" ]; then
      whonix_census_result_ok="true"
      whonix_news_result_output="${whonix_news_result_output}
$VM Census: Skipped, because not running on Whonix-Gateway, ok."
      return 0
   fi

   if [ "$whonix_gateway_census_do_check_in" = "false" ]; then
      whonix_census_result_ok="true"
      whonix_news_result_output="${whonix_news_result_output}
$VM Census: Skipped, because already counted less than a day ago, ok."
      return 0
   fi

   web_link="$whonix_gateway_census_api_link"
   if [ "${whonix_news_download_exit_code[$web_link]}" = "0" ]; then
      local last_run
      last_run="$(date +%s)"
      echo "$last_run" | tee "$whonix_gateway_last_census_file" > /dev/null
      whonix_census_result_ok="true"
      whonix_news_result_output="${whonix_news_result_output}
$VM Census: Ok."
      return 0
   fi

   whonix_news_result_output="${whonix_news_result_output}
$VM Census: Error.
<br></br>
whonix_news_download_exit_code[$web_link]: <code>${whonix_news_download_exit_code[$web_link]}</code>"
}

check_whonix_show_news() {
   local type
   type="info"
   if [ ! "$whonix_census_result_ok" = "true" ]; then
      type="warning"
   fi

   local MSG="<p>$whonix_news_hyperlink Result:<br></br>
$whonix_news_result_output</p>"

   ## TODO
   if [ "$verbose" -ge "1" ]; then
      $output_x ${output_opts[@]} --messagex --typex "$type" --message "$MSG"
      $output_cli ${output_opts[@]} --messagecli --typecli "$type" --message "$MSG"
   fi
}
