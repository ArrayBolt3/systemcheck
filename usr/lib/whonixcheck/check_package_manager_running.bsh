#!/bin/bash

## Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

check_package_manager_running() {
   check_package_manager_running_helper

   if [ "$check_apt_get_exit_code" = "0" ]; then
      if [ "$whonixcheck_package_manager_waiting" = "1" ]; then
         $output_x ${output_opts[@]} --progressbaridx "$progressbaridx" --progressx "100"
      fi
      local MSG="<p>Check Package Manager Running Result: None running, ok.</p>"
      if [ "$verbose" -ge "1" ]; then
         $output_x ${output_opts[@]} --messagex --typex "info" --message "$MSG"
         $output_cli ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      fi
      return 0
   fi

   if [ ! "$whonixcheck_package_manager_waiting" = "1" ]; then
      ## When "$AUTOSTARTED" = "1", it could be that whonixcheck was started
      ## by whonixcheckd because Whonix is currently being upgraded. Therefore
      ## show a package manager waiting message.
      if [ "$DAEMON" = "1" ]; then
         true "No package manager waiting message when running in daemon mode."
      elif [ "$AUTOSTARTED" = "1" ] && [ "$silent" -ge "3" ]; then
         true "$FUNCNAME: AUTOSTARTED is $AUTOSTARTED. silent is $silent. Skipping creation of waiting progress bar."
      else
         whonixcheck_package_manager_waiting="1"

         progressbaridx="$(cat "/proc/sys/kernel/random/uuid")"

         local MSG="$package_manager_waiting_msg_x"
         $output_cli ${output_opts[@]} --waitmessagecli --typecli "info" --message "$MSG" --done
         ## Start progress bar to show we are waiting.
         $output_x ${output_opts[@]} --progressbaridx "$progressbaridx" --progressbarx --parentpid "$$" --progressbartitlex "$TITLE_X" --message "$MSG" --done
      fi
   fi

   sleep "10" &
   wait "$!" || true
   check_package_manager_running
}
