#!/bin/bash

## Copyright (C) 2012 - 2020 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -e

source /usr/lib/systemcheck/uwt_tool.bsh

census_preparation() {
   if [ ! "$(whoami)" = "sal-census" ] && [ ! "$(whoami)" = "census" ]; then
      echo "ERROR: Exiting. Must be run under user sal-census or census."
      exit 1
   fi

   if [ "$NOTIFY_SOCKET" = "" ]; then
      ## Support manual run from command line.
      ## I.e. when run not through systemd unit.
      systemd_notify="true 'INFO: skip because NOTIFY_SOCKET unset. Probably run manually. SKIP: systemd-notify"
   else
      systemd_notify=systemd-notify
   fi

   virtualizer="$(systemd-detect-virt)" || true
   if [ "$virtualizer" = "oracle" ]; then
      known_virtualizer=yes
   elif [ "$virtualizer" = "kvm" ]; then
      known_virtualizer=yes
   elif [ "$virtualizer" = "qemu" ]; then
      known_virtualizer=yes
   fi
   if test -d /usr/share/qubes ; then
      virtualizer=qubes
      known_virtualizer=yes
   fi

   ## Dedicated onion different from homepage.
   if test -f /usr/share/whonix/marker ; then
      true "INFO: Whonix detected."
      census_base_api_link="http://api.vel76jfvbl6rlq7qrgewrxpkzhulutx5tl4me4lwpzfje4sv6qgrckad.onion"
   else
      true "INFO: Kicksecure detected."
      census_base_api_link="http://api.ost5p5ju2eojz4ukhb7iib7pxvwrkm7yzeezamnzmxwidhnrtgad7yad.onion"
   fi

   if [ "$known_virtualizer" = "yes" ] ; then
      census_api_link="${census_base_api_link}/census_${virtualizer}"
   else
      census_api_link="${census_base_api_link}/census_unknown"
   fi

   ## TODO
   ## Testing.
   census_api_link="${census_base_api_link}/apitest"

   ## Test
   #census_api_link="https://www.whonix.org"

   ## sets: GATEWAY_IP
   eval $(/usr/lib/helper-scripts/settings_echo)

   if test -e /usr/share/anon-gw-base-files/gateway || test -f /usr/share/anon-ws-base-files/workstation ; then
      [ -n "$SOCKS_PORT_CENSUS" ] || SOCKS_PORT_CENSUS="9114"
   else
      [ -n "$SOCKS_PORT_CENSUS" ] || SOCKS_PORT_CENSUS="9050"
   fi

   [ -n "$CURL_PROXY_CENSUS" ] || CURL_PROXY_CENSUS="--proxy socks5h://user:password@$GATEWAY_IP:$SOCKS_PORT_CENSUS"

   ## Debugging.
   #ls -la ~/
   touch ~/census_last_done
}

check_circuit_established() {
   while true; do
      $systemd_notify --pid="$PPID" WATCHDOG=1

      if [ "$(/usr/bin/tor-circuit-established-check)" = "1" ]; then
         break
      fi

      $systemd_notify --pid="$PPID" WATCHDOG=1

      ## TODO: increase
      sleep 10

      $systemd_notify --pid="$PPID" WATCHDOG=1
   done
}

check_census_lastrun() {
   ## One hour has 3600 seconds.
   ## A day has 86400 seconds.
   local MAX="86400"

   if [ -f ~/census_last_done ]; then
      LASTRUN="$(cat ~/census_last_done)" || true
   fi

   if [ "$LASTRUN" = "" ]; then
      LASTRUN="$MAX"
   fi

   if [[ "$LASTRUN" != *[!0-9]* ]]; then
      true "$FUNCNAME: LASTRUN is strictly numeric."
   else
      echo "ERROR: $FUNCNAME: LASTRUN not strictly numeric. LASTRUN: $LASTRUN"
      ## Not strictly numeric.
      ## the census_completed function does almost the same
      LASTRUN="$MAX"
   fi

   max_string_length="12"
   actual_string_length="${#LASTRUN}"

   if [ "$actual_string_length" -gt "$max_string_length" ]; then
      echo "ERROR: $FUNCNAME: excessive string length: $actual_string_length / $max_string_length"
      exit 1
   fi

   local CURRENTTIME
   CURRENTTIME="$(date --utc +%s)"

   DIFFERENCE="$(( $CURRENTTIME - $LASTRUN ))"

   if [ "$DIFFERENCE" -le "$MAX" ]; then
      echo "INFO: No need."
      exit 0
   fi

   echo "INFO: Attempting to count-in..."
}

census_completed() {
   local LASTRUN
   LASTRUN="$(date --utc +%s)"
   echo "$LASTRUN" | tee ~/census_last_done > /dev/null
}

census_count_or_not() {
   if test -f /run/qubes/this-is-templatevm ; then
      echo "INFO: Skip in Qubes TemplateVM"
      exit 0
   fi

   ## TODO: not compatible with sandbox-app-launcher
   if command -v qubesdb-read &>/dev/null ; then
      qubes_vm_persistence="$(qubesdb-read /qubes-vm-persistence)"
   fi

   if [ "$qubes_vm_persistence" = "none" ]; then
      echo "INFO: Skip in Qubes DispVM."
      exit 0
   fi

   ## TODO
#    if ! test -f /usr/share/anon-gw-base-files/gateway ; then
#       echo "INFO: Skip. Count only gateway."
#       exit 0
#    fi
}

census_do() {
   #rm -f ~/census_result
   #--output ~/census_result

   curl_exit_code="0"

   $CURL \
      --silent \
      --fail \
      $CURL_PROXY_CENSUS \
      --location \
      --retry-connrefused \
      --retry 3 \
      --retry-delay 3 \
      --retry-max-time 120 \
      --max-time 180 \
      --output /dev/null \
      --request PUT \
      --data "gateway-sign-in" \
      "$census_api_link" \
      || { curl_exit_code="$?" ; true; };

   if [ ! "$curl_exit_code" = "0" ]; then
      echo "ERROR: Failure."
      local curl_status_message
      curl_status_message="$(/usr/lib/curl-scripts/curl_exit_codes "$curl_exit_code")"
      echo "curl exit code: $curl_status_message"
      exit 0
   fi

   echo "INFO: Success."

   census_completed
}

census_preparation
check_circuit_established
census_count_or_not
check_census_lastrun
census_do
